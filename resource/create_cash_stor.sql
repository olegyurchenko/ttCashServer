#----------------------------------------------------------------------------
#
# Script to create cash data storage.
#
# (C) T&T team, Kiev, Ukraine 2016.<br>
# started 22.01.2016  9:32:22<br>
# @author oleg
# @version 0.01
#
#----------------------------------------------------------------------------*/
CREATE TABLE IF NOT EXISTS PLU_REV(
ROWID INTEGER NOT NULL PRIMARY KEY,
C INTEGER,
CHANGES TIMESTAMP
);

CREATE TABLE IF NOT EXISTS PLU(
C INTEGER NOT NULL PRIMARY KEY,
DEL INTEGER NOT NULL DEFAULT 0,
REV INTEGER,
NM TEXT,
GRP INTEGER,
DPT INTEGER,
TX INTEGER,
TX2 INTEGER,
"DEC" INTEGER
);


CREATE TRIGGER IF NOT EXISTS PLU_INSERT AFTER INSERT ON PLU
BEGIN
  INSERT INTO PLU_REV(C,CHANGES) VALUES(NEW.C, DATETIME('now'));
  UPDATE PLU SET REV=LAST_INSERT_ROWID() WHERE C = NEW.C;
END;

CREATE TRIGGER IF NOT EXISTS PLU_UPDATE AFTER UPDATE OF NM,DEL,NM,GRP,DPT,TX,TX2,"DEC" ON PLU
BEGIN
  INSERT INTO PLU_REV(C,CHANGES) VALUES(NEW.C, DATETIME('now'));
  UPDATE PLU SET REV=LAST_INSERT_ROWID() WHERE C = NEW.C;
END;
#----------------------------------------------------------------------------*/
CREATE TABLE IF NOT EXISTS PRC_REV(
ROWID INTEGER NOT NULL PRIMARY KEY,
C INTEGER,
CHANGES TIMESTAMP
);

CREATE TABLE IF NOT EXISTS PRC(
C INTEGER NOT NULL PRIMARY KEY,
DEL INTEGER NOT NULL DEFAULT 0,
REV INTEGER,
PRC DOUBLE
);


CREATE TRIGGER IF NOT EXISTS PRC_INSERT AFTER INSERT ON PRC
BEGIN
  INSERT INTO PRC_REV(C,CHANGES) VALUES(NEW.C, DATETIME('now'));
  UPDATE PRC SET REV=LAST_INSERT_ROWID() WHERE C = NEW.C;
END;

CREATE TRIGGER IF NOT EXISTS PRC_UPDATE AFTER UPDATE OF PRC, DEL ON PRC
BEGIN
  INSERT INTO PRC_REV(C,CHANGES) VALUES(NEW.C, DATETIME('now'));
  UPDATE PRC SET REV=LAST_INSERT_ROWID() WHERE C = NEW.C;
END;
#----------------------------------------------------------------------------*/
CREATE TABLE IF NOT EXISTS GRP_REV(
ROWID INTEGER NOT NULL PRIMARY KEY,
C INTEGER,
CHANGES TIMESTAMP
);

CREATE TABLE IF NOT EXISTS GRP(
C INTEGER NOT NULL PRIMARY KEY,
DEL INTEGER NOT NULL DEFAULT 0,
REV INTEGER,
NM TEXT
);


CREATE TRIGGER IF NOT EXISTS GRP_INSERT AFTER INSERT ON GRP
BEGIN
  INSERT INTO GRP_REV(C,CHANGES) VALUES(NEW.C, DATETIME('now'));
  UPDATE GRP SET REV=LAST_INSERT_ROWID() WHERE C = NEW.C;
END; 

CREATE TRIGGER IF NOT EXISTS GRP_UPDATE AFTER UPDATE OF NM, DEL ON GRP
BEGIN
  INSERT INTO GRP_REV(C,CHANGES) 
    SELECT NEW.C, DATETIME('now') WHERE
     (CASE WHEN(OLD.NM <> NEW.NM) #if new != old 
       THEN (1=1)                 #insert 1 row
       ELSE (1=0)                 #else 0 row
      END)
     ;
  UPDATE GRP SET REV=(
    CASE WHEN (OLD.NM <> NEW.NM) 
	THEN LAST_INSERT_ROWID()
	ELSE OLD.REV
    END) 
    WHERE C = NEW.C
    ;
END; 
#----------------------------------------------------------------------------*/
CREATE TABLE IF NOT EXISTS DPT_REV(
ROWID INTEGER NOT NULL PRIMARY KEY,
C INTEGER,
CHANGES TIMESTAMP
);

CREATE TABLE IF NOT EXISTS DPT(
C INTEGER NOT NULL PRIMARY KEY,
DEL INTEGER NOT NULL DEFAULT 0,
REV INTEGER,
NM TEXT
);


CREATE TRIGGER IF NOT EXISTS DPT_INSERT AFTER INSERT ON DPT
BEGIN
  INSERT INTO DPT_REV(C,CHANGES) VALUES(NEW.C, DATETIME('now'));
  UPDATE DPT SET REV=LAST_INSERT_ROWID() WHERE C = NEW.C;
END;

CREATE TRIGGER IF NOT EXISTS DPT_UPDATE AFTER UPDATE OF NM, DEL ON DPT
BEGIN
  INSERT INTO DPT_REV(C,CHANGES) VALUES(NEW.C, DATETIME('now'));
  UPDATE DPT SET REV=LAST_INSERT_ROWID() WHERE C = NEW.C;
END;
#----------------------------------------------------------------------------*/
CREATE TABLE IF NOT EXISTS BAR_REV(
ROWID INTEGER NOT NULL PRIMARY KEY,
ID INTEGER,
CHANGES TIMESTAMP
);

CREATE TABLE IF NOT EXISTS BAR(
ID INTEGER NOT NULL PRIMARY KEY,
DEL INTEGER NOT NULL DEFAULT 0,
REV INTEGER,
CD TEXT,
C INTEGER
);


CREATE TRIGGER IF NOT EXISTS BAR_INSERT AFTER INSERT ON BAR
BEGIN
  INSERT INTO BAR_REV(ID,CHANGES) VALUES(NEW.ID, DATETIME('now'));
  UPDATE BAR SET REV=LAST_INSERT_ROWID() WHERE ID = NEW.ID;
END;

CREATE TRIGGER IF NOT EXISTS BAR_UPDATE AFTER UPDATE OF CD, C, DEL ON DPT
BEGIN
  INSERT INTO BAR_REV(ID,CHANGES) VALUES(NEW.ID, DATETIME('now'));
  UPDATE BAR SET REV=LAST_INSERT_ROWID() WHERE ID = NEW.ID;
END;
#----------------------------------------------------------------------------*/
